name: Nightly Data Refresh & Deploy

on:
  schedule:
    - cron: "17 5 * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    env:
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_API_URL: ${{ secrets.LLM_API_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: corepack enable

      - name: Install
        run: npm ci

      - name: Generate MDX post via LLM
        if: ${{ env.LLM_API_KEY != '' && env.LLM_API_URL != '' }}
        run: node scripts/ai-generate-post.mjs
        env:
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_API_URL: ${{ secrets.LLM_API_URL }}

      - name: Run data pipeline
        id: pipeline
        run: npm run data:checkup

      - name: Parse coverage result
        id: parse
        run: |
          COV=$(grep -A5 "Key fields coverage" scripts/out/coverage.md || true)
          echo "coverage_summary<<EOF" >> $GITHUB_OUTPUT
          echo "$COV" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          # extract % numbers for quick thresholds
          FX=$(grep "effects" scripts/out/coverage.md | grep -oE "[0-9]+\\.[0-9]+%" | head -1 | tr -d '%')
          DX=$(grep "description" scripts/out/coverage.md | grep -oE "[0-9]+\\.[0-9]+%" | head -1 | tr -d '%')
          LX=$(grep "legalstatus" scripts/out/coverage.md | grep -oE "[0-9]+\\.[0-9]+%" | head -1 | tr -d '%')
          echo "effects=$FX" >> $GITHUB_OUTPUT
          echo "description=$DX" >> $GITHUB_OUTPUT
          echo "legalstatus=$LX" >> $GITHUB_OUTPUT

      - name: Verify thresholds
        id: check
        run: |
          FX=${{ steps.parse.outputs.effects }}
          DX=${{ steps.parse.outputs.description }}
          LX=${{ steps.parse.outputs.legalstatus }}
          echo "effects=$FX, description=$DX, legalstatus=$LX"
          FAIL=0
          for VAL in $FX $DX $LX; do
            if [ -z "$VAL" ]; then
              echo "Missing coverage metric, treating as failure."
              FAIL=1
            elif [ "$(echo "$VAL < 90" | bc -l)" -eq 1 ]; then
              FAIL=1
            fi
          done
          if [ "$FAIL" -eq 1 ]; then
            echo "Coverage below 90% — skipping auto-merge."
            echo "can_merge=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "✅ Coverage ≥90% for all key fields, safe to merge."
          echo "can_merge=true" >> $GITHUB_OUTPUT
        shell: bash

      - name: Compute PR body
        id: prbody
        run: |
          CHANGED=$(git diff --name-only)
          node scripts/ci-prepare-pr.mjs $CHANGED
        shell: bash

      - name: Create or update PR
        id: create_pr
        if: always()
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(data): nightly refresh"
          title: "chore(data): nightly refresh — $(date -u +'%Y-%m-%d')"
          body: ${{ steps.prbody.outputs.pr_body }}
          branch: ci/nightly-data-refresh-auto
          labels: data, automated, nightly
          add-paths: |
            src/data/herbs/herbs.normalized.json
            scripts/out/**

      - name: Enable auto-merge (if coverage OK)
        if: steps.check.outputs.can_merge == 'true' && steps.create_pr.outputs.pull-request-number != ''
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash

      - name: Deploy (optional)
        if: steps.create_pr.outputs.pull-request-number == ''
        run: echo "No changes to deploy."

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: herb-data-coverage
          path: scripts/out/
